{"version":3,"sources":["Message.js","MessageList.js","MessageInput.js","InfoBar.js","Chat.js","Join.js","App.js","index.js"],"names":["Message","user","message","className","text","MessageList","messageArr","map","index","key","MessageInput","sendMessage","handleChange","type","value","onChange","onKeyPress","event","onClick","InfoBar","room","goHome","src","href","ws","WebSocket","Chat","username","enterRoom","useState","setMessages","setMessage","onopen","console","log","onmessage","data","JSON","parse","json","send","stringify","e","target","Join","handleChangeUser","handleChangeRoom","join","placeholder","App","setUsername","setEnterRoom","state","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f1959b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Message.css'\r\n\r\nexport default function Message({user , message}){\r\n    return(\r\n        \r\n        message.user === user?\r\n        <div className = \"message sentMessage\"><div className = \"outer-sent-message\"><p>{message.user}: {message.text}</p></div></div>\r\n        :<div className = \"message receivedMessage\"><div className = \"outer-received-message\"><p>{message.user}: {message.text}</p></div></div>\r\n    )\r\n}","import React from 'react'\r\nimport Message from './Message'\r\nimport './MessageList.css'\r\n\r\nexport default function MessageList({user, messageArr}){\r\n    return(\r\n        <div className = \"messageListContainer\">\r\n            {messageArr.map((message,index) =>{\r\n\r\n                return <div className = \"message-wrap\" key = {index}><Message user = {user} message = {message}/></div>\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './MessageInput.css'\r\n\r\nexport default function MessageInput({sendMessage, handleChange, message}){\r\n    return(\r\n        <div className = \"messageInput\">\r\n            <input \r\n            className = 'inputBar'\r\n            type = \"text\"\r\n            value = {message}\r\n            onChange = {handleChange}\r\n            onKeyPress = {(event) => event.key==='Enter'?sendMessage():null}/>\r\n            <button \r\n            className = 'sendButton'\r\n            onClick = {sendMessage}>Send</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './InfoBar.css'\r\n\r\nexport default function InfoBar({user, room, goHome}){\r\n    return(\r\n        <div className = 'infoBar'>\r\n            <div className = 'user'>\r\n                <img className = \"connected-icon\" src=\"https://img.icons8.com/color/48/000000/connection-status-on--v1.png\"/>\r\n                <p>{user}</p>\r\n            </div>\r\n            <p className = 'roomName'>{room}</p>\r\n            <a href =\"#\" onClick = {goHome}><img className = \"homeIcon\" src=\"https://img.icons8.com/ios-filled/50/000000/home.png\"/></a>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport './Chat.css';\r\nimport MessageList from './MessageList'\r\nimport MessageInput from './MessageInput'\r\nimport InfoBar from './InfoBar'\r\n\r\nconst ws = new WebSocket('https://my-ws-app.herokuapp.com/');\r\n\r\nfunction Chat({username, enterRoom, goHome}) {\r\n  const [user,setUser] = useState(username)\r\n  const [room,setRoom] = useState(enterRoom)\r\n  const [messageArr,setMessages] = useState([{room: room, user: 'chatbot',text: 'Welcome to the chat'}]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  ws.onopen = () => { \r\n    console.log('Now connected')\r\n  };\r\n  \r\n  ws.onmessage = (event) => {\r\n    console.log(event.data)\r\n    console.log(JSON.parse(event.data))\r\n    console.log(messageArr)\r\n    const json = JSON.parse(event.data);\r\n    const message =JSON.parse(json)\r\n    console.log(message.room)\r\n    if(message.room === room){\r\n        setMessages([...messageArr,message]);\r\n    }\r\n    \r\n  }\r\n  \r\n  const sendMessage = () => {\r\n    if(message!==''){\r\n      ws.send(JSON.stringify({\"room\": room, \"user\": user,\"text\":message}));\r\n      setMessage('')\r\n      console.log('message sent')\r\n    }\r\n  }\r\n\r\n  function handleChange(e){\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <InfoBar user = {user} room = {room} goHome = {goHome}/>\r\n      <MessageList user = {user} messageArr = {messageArr}/>\r\n      <MessageInput sendMessage = {sendMessage} handleChange = {handleChange} message = {message}/>\r\n      {/* {messageArr.map((message,index) => <li key = {index}>{message.text}</li>)}\r\n      <button onClick = {sendMessage}>test</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React,{useState} from 'react'\r\nimport './Join.css'\r\n\r\nexport default function Join({username, enterRoom, handleChangeUser, handleChangeRoom, join}){\r\n    \r\n    return(\r\n        <div className = \"join\">\r\n            <div className = \"joinInnerContainer\">\r\n                <h1>Join</h1>\r\n                <input \r\n                className = \"joinInput\"\r\n                type = \"text\"\r\n                value = {username} \r\n                onChange = {handleChangeUser}\r\n                onKeyPress = {(event) => event.key === 'Enter'?join():null}\r\n                placeholder = \"username\"/>\r\n                <br />\r\n                <input \r\n                className = \"joinInput\"\r\n                type = \"text\"\r\n                value = {enterRoom}\r\n                onChange = {handleChangeRoom}\r\n                onKeyPress = {(event) => event.key === 'Enter'?join():null}\r\n                placeholder = \"room\"/>\r\n                <br />\r\n                <button className = \"joinButton\" onClick = {join} >Enter Chat</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport './App.css';\r\nimport Chat from './Chat'\r\nimport Join from './Join'\r\n\r\n\r\nfunction App() {\r\n  const [username,setUsername] = useState('')\r\n  const [enterRoom, setEnterRoom] = useState('')\r\n  const [state, setState] = useState(true);\r\n\r\n  const handleChangeUser = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n  const handleChangeRoom = (e) => {\r\n    setEnterRoom(e.target.value)\r\n  }\r\n  const goHome = () => {\r\n    setState(true)\r\n  }\r\n  const join = () => {\r\n    if(username!==''&&enterRoom!=='') setState(false);\r\n  }\r\n  return (\r\n    state\r\n    ?<Join username = {username} enterRoom = {enterRoom} handleChangeUser = {handleChangeUser} handleChangeRoom = {handleChangeRoom} join = {join}/>\r\n    :<Chat username={username} enterRoom = {enterRoom} goHome = {goHome}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}